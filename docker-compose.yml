version: '3.8'

services:
  booksapi:
    build: .
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - api.quranapi.host=http://docker-wiremock:8080
    container_name: webflux-holyquran-api
    ports:
      - "8080:8080"
    depends_on:
      - docker-wiremock
      - springadmin
      - prometheus
      - grafana
    deploy:
      resources:
        limits:
          cpus: '400m' # Example: limit to 400m milli cpu, given a core is of 1000 millicpu
          memory: '512M' # Example: limit to 512 megabytes of memory
    links:
      - docker-wiremock
      - springadmin
      - prometheus
      - grafana
    networks:
      - myNetwork

  docker-wiremock:
    image: wiremock/wiremock:latest
    container_name: docker-wiremock
    volumes:
      - ./wiremock:/home/wiremock/
    ports:
      - "9021:8080"  # Adjusted port mapping
    deploy:
      resources:
        limits:
          cpus: '500m' # Example: limit to 50% of one CPU core
          memory: '256M' # Example: limit to 256 megabytes of memory
    networks:
      - myNetwork

  springadmin:
    image: codecentric/spring-boot-admin:3.0
    ports:
      - "9085:9085"
    environment:
      SPRING_BOOT_ADMIN_CONTEXT_PATH: /
    command: --spring.boot.admin.context-path=/
    deploy:
      resources:
        limits:
          cpus: '500m' # Example: limit to 50% of one CPU core
          memory: '512M' # Example: limit to 512 megabytes of memory
    networks:
      - myNetwork
    volumes:
      - ./monitoring/spring-boot-admin/application.yml:/application.yml
      - ./monitoring/spring-boot-admin/application.properties:/application.properties


  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
      image: grafana/grafana:9.5.2
      container_name: grafana
      ports:
        - "3000:3000"
      restart: unless-stopped
      volumes:
        - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

networks:
  myNetwork:
    driver: bridge